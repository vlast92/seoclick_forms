{"version":3,"sources":["../../sources/js/seoclick_forms.js"],"names":["jQuery","document","ready","$","inputs","sitePattern","phonePattern","emailPattern","forms","each","index","form","find","setEvents","on","sendData","input","name","attr","checkPasteText","checkPressedKey","checkPattern","event","console","log","pattern","data","originalEvent","clipboardData","getData","getPattern","test","preventDefault","e","ctrlKey","altKey","metaKey","chr","getChar","code","which","keyCode","String","fromCharCode","charCode","inputData","value","val","addClass","removeClass","RegExp","capchaResponse","request","formContainer","closest","messageBox","serializeArray","objectifyFormData","hasClass","animate","scrollTop","offset","top","html","ajax","type","success","respond","error","jqXHR","textStatus","grecaptcha","reset","formArray","returnArray","i","length"],"mappings":"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","file":"seoclick_forms.js","sourcesContent":["jQuery(document).ready(function ($) {\r\n    /*TODO сделать сообщения о валидации*/\r\n    let inputs,\r\n        sitePattern = \"^[\\\\w \\\\.]+[\\\\.]{1}[\\\\D]{2,4}$\",\r\n        phonePattern = \"^[\\\\d \\\\+]{1,5}[\\\\( \\\\d \\\\) \\\\s]{1,10}[-?\\\\d \\\\s]+$\",\r\n        emailPattern = \"^[\\\\w \\\\.]+[@]{1}[\\\\w]+[\\\\.]{1}[\\\\D]{2,4}$\",\r\n        forms = $(\".form-validate\");\r\n\r\n    $.each(forms, function (index, form) {\r\n\r\n        //получаем валиируемые поля формы\r\n        inputs = $(form).find(\".validate\");\r\n\r\n        //вызываем функцию установки обработчиков на поля формы\r\n        setEvents(inputs);\r\n        //вешам обработчик отправки формы\r\n        $(form).on(\"submit\", sendData);\r\n    });\r\n\r\n    //функция установки обработчиков полей формы\r\n    function setEvents(inputs) {\r\n\r\n        $.each(inputs, function (index, input) {\r\n\r\n            let name = $(input).attr(\"data-validate\");\r\n\r\n            //устанавливвваем шаблоны для полей формы\r\n            switch (name) {\r\n                case \"site\":\r\n                    $(input).attr(\"pattern\", sitePattern);\r\n                    break;\r\n                case \"email\":\r\n                    $(input).attr(\"pattern\", emailPattern);\r\n                    break;\r\n                case \"phone\":\r\n                    $(input).attr(\"pattern\", phonePattern);\r\n                    $(input).on(\"paste\", checkPasteText);\r\n                    $(input).on(\"keypress\", checkPressedKey);\r\n                    break;\r\n                default:\r\n                    return true;\r\n            }\r\n            //устанавливаем обработчик на проверку вводимых данных\r\n            $(input).on(\"focusin change keyup\", function () {\r\n\r\n                checkPattern($(this));\r\n            });\r\n        });\r\n    }\r\n\r\n    //функция проверки вставленные данные в поле формы по шаблону\r\n    function checkPasteText(event) {\r\n        console.log(event);\r\n        let pattern,\r\n            data = event.originalEvent.clipboardData.getData('text/plain');\r\n\r\n        pattern = getPattern($(this));\r\n\r\n        //проверка данных по шаблону\r\n        if (!pattern.test(data)) {\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    /*\r\n    * функция проверки нажатой клавиши\r\n    * Функция возвращет false на все клавиши,\r\n    * кроме цифр, знаков + - ( ) и пробелов\r\n    */\r\n    function checkPressedKey(event) {\r\n\r\n        let e = event;\r\n\r\n        if (e.ctrlKey || e.altKey || e.metaKey) {\r\n            return;\r\n        }\r\n\r\n        let chr = getChar(e);\r\n\r\n        // с null надо осторожно в неравенствах, т.к. например null >= '0' => true!\r\n        // на всякий случай лучше вынести проверку chr = null отдельно\r\n        if (chr === null) {\r\n            return;\r\n        }\r\n\r\n        if (chr < '0' || chr > '9') {\r\n            if (chr !== \"+\" && chr !== \"-\" && chr !== \"(\" && chr !== \")\" && chr !== \" \") {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    //функция возвращает код символа\r\n    function getChar(event) {\r\n\r\n        if (event.code === \"Space\" || event.code === \"Equal\" || event.code === \"Digit9\" || event.code === \"Digit0\") {\r\n            return 0;\r\n        }\r\n        if (event.which === null) { // IE\r\n            if (event.keyCode < 32) return null; // спец. символ\r\n            return String.fromCharCode(event.keyCode)\r\n        }\r\n\r\n        if (event.which !== 0 && event.charCode !== 0) { // все кроме IE\r\n            if (event.which < 32) return null; // спец. символ\r\n            return String.fromCharCode(event.which); // остальные\r\n        }\r\n\r\n        return null; // спец. символ\r\n    }\r\n\r\n    /*\r\n    * Функция проверки введенных данных по шаблону\r\n    * возвращает false если проверка не пройдена\r\n    */\r\n    function checkPattern(inputData) {\r\n\r\n        let value = $(inputData).val(), pattern;\r\n\r\n        pattern = getPattern(inputData);\r\n\r\n        //проверка данных по шаблону\r\n        if (!pattern.test(value)) {\r\n            inputData.addClass(\"invalid\");\r\n            return false;\r\n        } else {\r\n            inputData.removeClass(\"invalid\");\r\n            return true;\r\n        }\r\n    }\r\n\r\n    //Функция возвращает RegExp объект для переданного поля формы\r\n    function getPattern(inputData) {\r\n\r\n        let pattern;\r\n\r\n        //создание RegExp объекта из шаблона\r\n        switch ($(inputData).attr(\"data-validate\")) {\r\n            case \"phone\":\r\n                pattern = new RegExp(phonePattern);\r\n                break;\r\n            case \"email\":\r\n                pattern = new RegExp(emailPattern);\r\n                break;\r\n            case \"site\":\r\n                pattern = new RegExp(sitePattern);\r\n                break;\r\n            default:\r\n                return 0;\r\n        }\r\n\r\n        return pattern;\r\n    }\r\n\r\n    //функция отправки данных на сервер\r\n    function sendData(event) {\r\n\r\n        event.preventDefault();\r\n\r\n        let form = $(this), capchaResponse, request, data,\r\n            formContainer = form.closest(\".seoclick-forms\"),\r\n            messageBox = formContainer.find(\".message-container\");\r\n\r\n        data = form.serializeArray();\r\n        data = objectifyFormData(data);\r\n\r\n        messageBox.addClass(\"active\");\r\n        if($(formContainer).hasClass(\"seoclick-forms-popup-wrap\")){\r\n            $(formContainer).find(\".container\").animate({\r\n                scrollTop: 0\r\n            }, 300);\r\n        }else{\r\n            $('html, body').animate({\r\n                scrollTop: formContainer.offset().top - 200\r\n            }, 300);\r\n        }\r\n\r\n        capchaResponse = form.find(\".g-recaptcha-response\").val();\r\n        if (capchaResponse === \"\") {\r\n            messageBox.html(\"Не пройдена проверка 'Я не робот'\");\r\n            return false;\r\n        }\r\n\r\n        messageBox.html(\"Отправка...\");\r\n        // Формируем параметры запроса\r\n        request = {\r\n            'option': 'com_ajax', // Используем AJAX интерфейс\r\n            'module': 'seoclick_forms', // Название модуля без mod_\r\n            'format': 'json', // Формат возвращаемых данных\r\n            'g-recaptcha-response': capchaResponse, //ответ капчи\r\n            'data': data // данные формы\r\n        };\r\n\r\n        $.ajax({\r\n            type: 'POST',\r\n            data: request,\r\n\r\n            success: function (respond) {\r\n\r\n                messageBox.html(respond.data);\r\n            },\r\n            error: function (jqXHR, textStatus) {\r\n                messageBox.html('Ошибка AJAX запроса: ' + textStatus);\r\n            }\r\n        });\r\n\r\n        grecaptcha.reset();\r\n        return true;\r\n    }\r\n\r\n    /*\r\n    * Функция преобразования сериализованного массива\r\n    * функция принимает сериализованый двухмерный массив данных\r\n    * производит его преобразования из двухмерного массива\r\n    * в одномерный и возвращает полученный массив\r\n    */\r\n    function objectifyFormData(formArray) {//преобразование массива\r\n\r\n        let returnArray = {};\r\n        for (let i = 0; i < formArray.length; i++) {\r\n            returnArray[formArray[i]['name']] = formArray[i]['value'];\r\n        }\r\n        return returnArray;\r\n    }\r\n});\r\n"]}